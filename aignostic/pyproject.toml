[tool.coverage.run]
branch = true
source = ["aignostic"]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = "--cov --cov-report html:'../coverage/aignostic/html' --cov-report xml:'../coverage/aignostic/coverage.xml' --html='../reports/aignostic/unittests/html/index.html' --junitxml='../reports/aignostic/unittests/junit.xml'"

[tool.poetry]
name = "aignostic"
version = "1.0.0"
description = "AIgnostic Risk Monitoring and Auditing"
authors = []
license = 'Proprietary'
readme = 'README.md'

[[tool.poetry.packages]]
include = "aignostic"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
numpy = "^2.2.1"
pydantic = "^2.10.5"
uvicorn = "^0.34.0"
fastapi = { extras = ["standard"], version = "^0.115.6" }
pandas = "^2.2.3"
types-requests = "^2.32.0.20241016"
pandas-stubs = "^2.2.3.241126"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
update = "^0.0.1"
pika = "^1.3.2"

[tool.poetry.group.dev.dependencies]
autopep8 = "2.3.1"
flake8 = "7.1.1"
pytest = "^8.3.4"
pytest-sugar = "1.0.0"
pytest-cov = "6.0.0"
pytest-html = "4.1.1"
folktables = "^0.0.12"                                            # DEV
scikit-learn = "^1.6.1"                                           # DEV
pytest-httpserver = "^1.1.0"                                      # Dev
httpx = "^0.28.1"                                                 # Dev
transformers = "^4.48.0"                                          # Dev
torch = { version = "^2.5.1", source = "pytorch-gpu-src" }        # Dev
torchvision = { version = "^0.20.1", source = "pytorch-gpu-src" } # Dev
torchaudio = { version = "^2.5.1", source = "pytorch-gpu-src" }   # Dev


[[tool.poetry.source]]
name = "pytorch-gpu-src"
url = "https://download.pytorch.org/whl/cu124"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
