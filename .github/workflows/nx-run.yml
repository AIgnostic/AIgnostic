on:
  workflow_call:
    inputs:
      run_poetry_install:
        description: 'Run poetry install'
        required: false
        type: boolean
        default: true
      nx_tasks:
        description: 'Nx tasks to run'
        required: false
        type: string
        default: 'affected -t lint test build'

jobs:
  nx_affected:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Poetry before Python because https://github.com/actions/setup-python/issues/765
      - name: Install Poetry
        uses: snok/install-poetry@v1
        if: ${{ inputs.run_poetry_install }}
      - name: Set up Python 3.12 with Poetry
        uses: actions/setup-python@v5
        if: ${{ inputs.run_poetry_install }}
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Inject export plugin (required by NX)
        if: ${{ inputs.run_poetry_install }}
        run: poetry self add poetry-plugin-export

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Insall npm deps so NX works
      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      - name: Install dependencies using poetry
        if: ${{ inputs.run_poetry_install }}
        run: npx nx run-many --target=install --all

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # True build step: Run lint, then test, then build
      - run: npx ${{ inputs.nx_tasks }}
