# Made from a combination of past projecs, namely:
# - https://github.com/imperial/cpp-connect/
# -

name: CI & CD

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: write
  checks: write
  issues: write
  packages: write
  pull-requests: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: aignostic/aignostic
  IMPAAS_APP_NAME: aignostic

jobs:
  lint:
    uses: ./.github/workflows/nx-run.yml
    with:
      run_poetry_install: true
      nx_tasks: 'affected -t lint'
      artifact_name: 'lint-reports'
      artifact_path: 'dist/'
    secrets: inherit
  test:
    uses: ./.github/workflows/nx-run.yml
    with:
      run_poetry_install: true
      nx_tasks: 'affected -t test'
      artifact_name: 'test-coverage'
      artifact_path: 'coverage/'
    secrets: inherit
  build:
    uses: ./.github/workflows/nx-run.yml
    with:
      run_poetry_install: true
      nx_tasks: 'affected -t build'
      artifact_name: 'build-artifact'
      artifact_path: 'dist/'
    secrets: inherit

  docker-base:
    # Build base image first to enable caching
    uses: ./.github/workflows/docker.yml
    needs:
      - lint
      - test
      - build
    with:
      image_tag: 'python-prod-base'
      build_target: 'python-prod-base'
    secrets: inherit

  docker-aggregator:
    # Build base image first to enable caching
    uses: ./.github/workflows/docker.yml
    needs:
      - docker-base
    with:
      image_tag: 'aggregator'
      build_target: 'aggregator'
    secrets: inherit

  docker-api:
    # Build base image first to enable caching
    uses: ./.github/workflows/docker.yml
    needs:
      - docker-base
    with:
      image_tag: 'api'
      build_target: 'api'
    secrets: inherit

  docker-worker:
    # Build base image first to enable caching
    uses: ./.github/workflows/docker.yml
    needs:
      - docker-base
    with:
      image_tag: 'worker'
      build_target: 'worker'
    secrets: inherit

  deploy-tsuru:
    needs:
      - docker-api # if we didn't build a container, don't do this!
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      TSURU_TOKEN: ${{ secrets.IMPAAS_DEPLOY_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install tsuru CLI
        run: curl -fsSL "https://tsuru.io/get" | bash
      - name: Add impaas target
        run: tsuru target add impaas https://impaas.uk -s
      - name: Deploy app
        run: tsuru app deploy -i ${{ env.REGISTRY }}/aignostic/api:latest -a ${{ env.IMPAAS_APP_NAME }}
  deploy-gh-pages:
    needs:
      - lint
      - test
      - build
    # from https://github.com/JamesIves/github-pages-deploy-action
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # From https://github.com/actions/deploy-pages
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: write
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Build the app
        run: npx nx build frontend
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist/frontend # The folder the action should deploy.
